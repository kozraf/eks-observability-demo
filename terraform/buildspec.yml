version: 0.2

phases:
  install:
    commands:
      - echo Installing Terraform 1.6.6...
      - curl -fsSL https://releases.hashicorp.com/terraform/1.6.6/terraform_1.6.6_linux_amd64.zip -o terraform.zip
      - unzip -o terraform.zip -d /tmp && mv /tmp/terraform /usr/local/bin/terraform && terraform -version

      - echo Installing kubectl 1.30...
      - curl -LO https://dl.k8s.io/release/v1.30.0/bin/linux/amd64/kubectl
      - chmod +x kubectl && mv kubectl /usr/local/bin/kubectl && kubectl version --client

      - echo Installing Helm...
      - curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

  pre_build:
    commands:
      - echo "Initializing bootstrap Terraform module..."
      - terraform -chdir=bootstrap init

      - echo "Applying bootstrap to create IAM and CodeBuild role..."
      - |
        terraform -chdir=bootstrap apply -auto-approve \
          -var github_repo_url="https://github.com/kozraf/eks-observability-demo" \
          -var github_pat_secret_name="github/pat/eks-observability-demo"

      - echo "Fetching CodeBuild IAM Role ARN..."
      - |
        CODEBUILD_ROLE_ARN=$(terraform -chdir=bootstrap output -raw codebuild_role_arn)
        echo "CodeBuild role ARN: $CODEBUILD_ROLE_ARN"
        echo "export CODEBUILD_ROLE_ARN=$CODEBUILD_ROLE_ARN" >> ~/.bashrc

      - echo "Initializing Terraform for EKS cluster..."
      - terraform -chdir=terraform init

  build:
    commands:
      - source ~/.bashrc
      - echo "Deploying EKS + node groups..."
      - terraform -chdir=terraform apply -auto-approve -var codebuild_role_arn="$CODEBUILD_ROLE_ARN"

      - echo "Updating kubeconfig for kubectl access..."
      - CLUSTER_NAME=$(terraform -chdir=terraform output -raw cluster_name)
      - aws eks --region $AWS_REGION update-kubeconfig --name "$CLUSTER_NAME"

      - echo "Waiting 60 seconds for EKS API to become reachable..."
      - sleep 60

      - chmod +x ./scripts/deploy.sh
      - ./scripts/deploy.sh
