version: 0.2

phases:
  install:
    commands:
      - echo Installing Terraform 1.11.3...
      - curl -fsSL https://releases.hashicorp.com/terraform/1.11.3/terraform_1.11.3_linux_amd64.zip -o terraform.zip
      - unzip -o terraform.zip -d /tmp && mv /tmp/terraform /usr/local/bin/terraform && terraform -version

      - echo Installing kubectl 1.30...
      - curl -LO https://dl.k8s.io/release/v1.30.0/bin/linux/amd64/kubectl
      - chmod +x kubectl && mv kubectl /usr/local/bin/kubectl && kubectl version --client

      - echo Installing Helm...
      - curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - echo Installing AWS CLI v2...
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - unzip -o awscliv2.zip
      - ./aws/install --update
      - aws --version


  pre_build:
    commands:
      - echo "Initializing Terraform with remote backend"
      - |
        terraform -chdir=terraform init \
          -backend-config="bucket=$TF_STATE_BUCKET" \
          -backend-config="key=eks-observability/eks.tfstate" \
          -backend-config="region=$AWS_REGION" \
          -backend-config="dynamodb_table=$TF_LOCK_TABLE" \
          -backend-config="encrypt=true"

  build:
    commands:
      - echo "Applying Terraform (EKS + monitoring)..."
      - terraform -chdir=terraform apply -auto-approve

      - echo "Updating kubeconfig"
      - CLUSTER_NAME=$(terraform -chdir=terraform output -raw cluster_name)
      - aws eks --region "$AWS_REGION" update-kubeconfig --name "$CLUSTER_NAME"

      - aws eks --region "$AWS_REGION" update-kubeconfig --name "$CLUSTER_NAME" #debug
      - echo ">>> kubeconfig user exec block:" #debug
      - kubectl config view --minify -o jsonpath='{.users[0].user.exec}' #debug

      - echo "Waiting 60 seconds for API..."
      - sleep 60

      - chmod +x ./scripts/deploy.sh
      - ./scripts/deploy.sh
